{"version":3,"sources":["webpack:///./node_modules/corporate-ui/dist/esm/themeStyle-1eba4ba6.js","webpack:///./node_modules/corporate-ui/dist/esm/util-75cdeb64.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE2B;;;;;;;;;;;;;ACtC3B;AAAA;AAAA;AAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU,mEAAC;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,EAAE,mEAAC;AACH;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,EAAE,2DAAC;AACH,EAAE,2DAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,4CAA4C;AAC5C,KAAK;AACL;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,mEAAC;AAC9B,0BAA0B,mEAAC;;AAE3B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA,IAAI,mEAAC;AACL,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,4BAA4B;AAC3C,uBAAuB,SAAS,mBAAmB,UAAU;AAC7D,kCAAkC,cAAc;AAChD;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEqB","file":"common-es2015.js","sourcesContent":["function themeStyle(currentTheme, tagName, styleThis, el) {\r\n    /*\r\n      Helper function that will appened a stylesheet with scoped styling for specific component\r\n      either in the shadowRoot with adoptedStyleSheet API\r\n      or with a fallback method (IE,Old edge and so on)\r\n    */\r\n    let style;\r\n    const css = currentTheme ? currentTheme.components[tagName] : '';\r\n    // Fallback for currentTheme, initially empty or the currentTheme doesn't contain a version property\r\n    if (!currentTheme || !currentTheme.version || !styleThis) {\r\n        return;\r\n    }\r\n    // If the browser has support for adoptedStyleSheet (Chromium)\r\n    if (el.shadowRoot.adoptedStyleSheets) {\r\n        style = new CSSStyleSheet();\r\n        style.replaceSync(css);\r\n        // TODO: We should not take first index we should all except the previous style\r\n        el.shadowRoot.adoptedStyleSheets = [el.shadowRoot.adoptedStyleSheets[0], style];\r\n    }\r\n    else {\r\n        // Fallback for browsers without adoptedStyleSheet API suppport\r\n        const node = el.shadowRoot || el;\r\n        style = el.querySelector('#themeStyle') || document.createElement('style');\r\n        // style.appendChild(document.createTextNode(css));\r\n        // style.innerHTML = css;\r\n        style.id = 'themeStyle';\r\n        if (style.styleSheet) {\r\n            style.styleSheet.cssText = css;\r\n        }\r\n        else {\r\n            style.appendChild(document.createTextNode(css));\r\n        }\r\n        if (!node.querySelector('#themeStyle')) {\r\n            node.insertBefore(style, node.firstChild.nextSibling);\r\n        }\r\n    }\r\n}\n\nexport { themeStyle as t };\n","import $ from './jquery-2579d7a8.js';\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.3.1): util.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * ------------------------------------------------------------------------\n * Private TransitionEnd Helpers\n * ------------------------------------------------------------------------\n */\n\nconst TRANSITION_END = 'transitionend';\nconst MAX_UID = 1000000;\nconst MILLISECONDS_MULTIPLIER = 1000;\n\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\nfunction toType(obj) {\n  return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\nfunction getSpecialTransitionEndEvent() {\n  return {\n    bindType: TRANSITION_END,\n    delegateType: TRANSITION_END,\n    handle(event) {\n      if ($(event.target).is(this)) {\n        return event.handleObj.handler.apply(this, arguments) // eslint-disable-line prefer-rest-params\n      }\n      return undefined // eslint-disable-line no-undefined\n    }\n  }\n}\n\nfunction transitionEndEmulator(duration) {\n  let called = false;\n\n  $(this).one(Util.TRANSITION_END, () => {\n    called = true;\n  });\n\n  setTimeout(() => {\n    if (!called) {\n      Util.triggerTransitionEnd(this);\n    }\n  }, duration);\n\n  return this\n}\n\nfunction setTransitionEndSupport() {\n  $.fn.emulateTransitionEnd = transitionEndEmulator;\n  $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();\n}\n\n/**\n * --------------------------------------------------------------------------\n * Public Util Api\n * --------------------------------------------------------------------------\n */\n\nconst Util = {\n\n  TRANSITION_END: 'bsTransitionEnd',\n\n  getUID(prefix) {\n    do {\n      // eslint-disable-next-line no-bitwise\n      prefix += ~~(Math.random() * MAX_UID); // \"~~\" acts like a faster Math.floor() here\n    } while (document.getElementById(prefix))\n    return prefix\n  },\n\n  getSelectorFromElement(element) {\n    let selector = element.getAttribute('data-target');\n\n    if (!selector || selector === '#') {\n      const hrefAttr = element.getAttribute('href');\n      selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : '';\n    }\n\n    try {\n      return document.querySelector(selector) ? selector : null\n    } catch (err) {\n      return null\n    }\n  },\n\n  getTransitionDurationFromElement(element) {\n    if (!element) {\n      return 0\n    }\n\n    // Get transition-duration of the element\n    let transitionDuration = $(element).css('transition-duration');\n    let transitionDelay = $(element).css('transition-delay');\n\n    const floatTransitionDuration = parseFloat(transitionDuration);\n    const floatTransitionDelay = parseFloat(transitionDelay);\n\n    // Return 0 if element or transition duration is not found\n    if (!floatTransitionDuration && !floatTransitionDelay) {\n      return 0\n    }\n\n    // If multiple durations are defined, take the first\n    transitionDuration = transitionDuration.split(',')[0];\n    transitionDelay = transitionDelay.split(',')[0];\n\n    return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\n  },\n\n  reflow(element) {\n    return element.offsetHeight\n  },\n\n  triggerTransitionEnd(element) {\n    $(element).trigger(TRANSITION_END);\n  },\n\n  // TODO: Remove in v5\n  supportsTransitionEnd() {\n    return Boolean(TRANSITION_END)\n  },\n\n  isElement(obj) {\n    return (obj[0] || obj).nodeType\n  },\n\n  typeCheckConfig(componentName, config, configTypes) {\n    for (const property in configTypes) {\n      if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n        const expectedTypes = configTypes[property];\n        const value         = config[property];\n        const valueType     = value && Util.isElement(value)\n          ? 'element' : toType(value);\n\n        if (!new RegExp(expectedTypes).test(valueType)) {\n          throw new Error(\n            `${componentName.toUpperCase()}: ` +\n            `Option \"${property}\" provided type \"${valueType}\" ` +\n            `but expected type \"${expectedTypes}\".`)\n        }\n      }\n    }\n  },\n\n  findShadowRoot(element) {\n    if (!document.documentElement.attachShadow) {\n      return null\n    }\n\n    // Can find the shadow root otherwise it'll return the document\n    if (typeof element.getRootNode === 'function') {\n      const root = element.getRootNode();\n      return root instanceof ShadowRoot ? root : null\n    }\n\n    if (element instanceof ShadowRoot) {\n      return element\n    }\n\n    // when we don't find a shadow root\n    if (!element.parentNode) {\n      return null\n    }\n\n    return Util.findShadowRoot(element.parentNode)\n  }\n};\n\nsetTransitionEndSupport();\n\nexport { Util as U };\n"],"sourceRoot":""}